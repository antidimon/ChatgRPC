syntax = "proto3";

package antidimon.web.messageservice;

option java_multiple_files = true;
option java_package = "antidimon.web.messageservice.proto";
option java_outer_classname = "MessageServiceProto";

service MessageService {
  rpc RegisterMessage(RegisterMessageRequest) returns (RegisterMessageResponse);
  rpc GetMessagesByChat(GetMessagesByChatRequest) returns (GetMessagesByChatResponse);
  rpc UpdateMessage(UpdateMessageRequest) returns (UpdateMessageResponse);
  rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse);
}

message RegisterMessageRequest{
  int64 chat_id = 1;
  int64 sender_id = 2;
  string text = 3;
}

message RegisterMessageResponse {
  bool success = 1;
  string message = 2;
}

message GetMessagesByChatRequest {
  int64 chat_id = 1;
}

message GetMessagesByChatResponse {
  repeated Msg messages = 1;
  bool success = 2;
  string message = 3;
}

message Msg {
  int64 message_id = 1;
  int64 sender_id = 2;
  string text = 3;
  string created_at = 4;
}

message UpdateMessageRequest {
  int64 message_id = 1;
  string text = 2;
}

message UpdateMessageResponse {
  bool success = 1;
  string message = 2;
}

message DeleteMessageRequest {
  int64 message_id = 1;
}

message DeleteMessageResponse {
  bool success = 1;
  string message = 2;
}





service ChatService {
  rpc CreateGroupChat(CreateGroupChatRequest) returns (CreateGroupChatResponse);
  rpc GetGroupChat(GetGroupChatRequest) returns (GetGroupChatResponse);
  rpc UpdateGroupChat(UpdateGroupChatRequest) returns (UpdateGroupChatResponse);
  rpc DeleteGroupChat(DeleteGroupChatRequest) returns (DeleteGroupChatResponse);
  rpc CreatePrivateChat(CreatePrivateChatRequest) returns (CreatePrivateChatResponse);
  rpc GetPrivateChat(GetPrivateChatRequest) returns (GetPrivateChatResponse);
  rpc DeletePrivateChat(DeletePrivateChatRequest) returns (DeletePrivateChatResponse);
  rpc AddUserToGroupChat(AddUserToGroupChatRequest) returns (AddUserToGroupChatResponse);
  rpc RemoveUserFromGroupChat(RemoveUserFromGroupChatRequest) returns (RemoveUserFromGroupChatResponse);

  rpc GetUserChats(GetUserChatsRequest) returns (GetUserChatsResponse);
  rpc DeleteUserChats(DeleteUserChatsRequest) returns (DeleteUserChatsResponse);
}

message CreateGroupChatRequest {
  string name = 1;
  string description = 2;
  int64 owner_id = 3;
}

message CreateGroupChatResponse {
  bool success = 1;
  string message = 2;
  int64 chat_id = 3;
}

message GetGroupChatRequest {
  int64 chat_id = 1;
}

message GetGroupChatResponse {
  int64 chat_id = 1;
  string name = 2;
  string description = 3;
  int64 owner_id = 4;
  repeated int64 participants = 5;
  string created_at = 6;
}

message UpdateGroupChatRequest {
  int64 chat_id = 1;
  string name = 2;
  string description = 3;
}

message UpdateGroupChatResponse {
  bool success = 1;
  string message = 2;
}

message DeleteGroupChatRequest {
  int64 chat_id = 1;
}

message DeleteGroupChatResponse {
  bool success = 1;
  string message = 2;
}

message CreatePrivateChatRequest {
  int64 user1_id = 1;
  int64 user2_id = 2;
}

message CreatePrivateChatResponse {
  bool success = 1;
  string message = 2;
  int64 chat_id = 3;
}

message GetPrivateChatRequest {
  int64 chat_id = 1;
}

message GetPrivateChatResponse {
  int64 id = 1;
  int64 user1_id = 2;
  int64 user2_id = 3;
  string created_at = 4;
}

message DeletePrivateChatRequest {
  int64 chat_id = 1;
}

message DeletePrivateChatResponse {
  bool success = 1;
  string message = 2;
}

message AddUserToGroupChatRequest {
  int64 chat_id = 1;
  int64 user_id = 2;
}

message AddUserToGroupChatResponse {
  bool success = 1;
  string message = 2;
}

message RemoveUserFromGroupChatRequest {
  int64 chat_id = 1;
  int64 user_id = 2;
}

message RemoveUserFromGroupChatResponse {
  bool success = 1;
  string message = 2;
}


message GetUserChatsRequest {
  int64 user_id = 1;
}

message GetUserChatsResponse {
  repeated ChatInfo chats = 1;
}

message ChatInfo {
  int64 chat_id = 1;
  string name = 2;
  string type = 3;
  int64 owner_id = 4;
  int64 user1_id = 5;
  int64 user2_id = 6;
}

message DeleteUserChatsRequest {
  int64 user_id = 1;
}

message DeleteUserChatsResponse {
  bool success = 1;
  string message = 2;
}
